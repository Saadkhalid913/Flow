{"version":3,"sources":["contexts/socketContext.js","components/RoomScreen.jsx","components/CanvasControls.jsx","components/Canvas.jsx","components/Chatbox/Chat.jsx","components/Chatbox/Chatbox.jsx","components/FileBox.jsx","components/Room.jsx","App.js","index.js"],"names":["socketContext","createContext","RoomScreen","props","useState","code","setCode","useContext","Socket","name","setName","setRoom","setIsAdmin","useEffect","handler","isAdmin","history","push","on","off","className","placeholder","onChange","e","target","value","onClick","emit","toast","warn","CanvasControls","onPenChange","onColorChange","htmlFor","defaultValue","type","min","max","onClear","Canvas","room","canvas","useRef","MouseDown","color","penSize","clear","current","getContext","clearRect","width","height","draw","x","y","x2","y2","ctx","beginPath","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","closePath","addEventListener","offsetX","offsetY","toDataURL","preventDefault","bcr","getBoundingClientRect","targetTouches","clientX","clientY","data","img","Image","src","onload","drawImage","drawIMG","Fragment","ref","Chat","chat","message","isOwn","ChatBox","chats","setChats","SocketContext","setMessage","inView","toggleView","Styles","window","innerWidth","right","top","style","map","c","Math","random","FileBox","files","setFiles","file","link","URL","createObjectURL","Blob","a","arrayBuffer","buffer","f","open","index","indexOf","oldFiles","splice","Room","replace","WindowWidth","setWindowWidth","id","configure","App","socket","setSocket","s","io","process","disconnect","Provider","path","render","admin","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab9493c2.chunk.js","sourcesContent":["import { createContext } from \"react\";\nconst socketContext = createContext()\nexport default socketContext","import React, {useState,useEffect, useContext} from 'react'\nimport socketContext from '../contexts/socketContext'\nimport { toast } from \"react-toastify\"\n\n\nconst RoomScreen = (props) => {\n    const [code, setCode] = useState(\"\")\n    const {Socket, name, setName, setRoom, setIsAdmin} = useContext(socketContext)\n    useEffect(() => {\n        if (!Socket) return\n\n        const handler = (code, name, isAdmin) => {\n            setRoom(code)\n            setIsAdmin(isAdmin)\n            setName(name)\n            if (isAdmin)\n                props.history.push(\"/room/admin/\" + code)\n            else\n                props.history.push(\"/room/\" + code)\n        }\n\n        Socket.on(\"room-joined\", handler)\n\n        return () => Socket.off(\"room-joined\", handler)\n        \n    }, [Socket, setIsAdmin,setName, props, setRoom])\n\n    const JoinRoom = () => {\n        if (name && code) {\n            Socket.emit(\"join-room\", code, name)}\n        else if (!code) toast.warn(\"Please enter the room code\")\n        else if (!name) toast.warn(\"Please enter a name\")}\n\n    const CreateRoom = () => {\n        if (name) {Socket.emit(\"create-room\", name)}\n        else toast.warn(\"Please enter a name\")\n    }\n\n    return (\n       <div className = \"room-join-screen-wrapper\">\n            <div className = \"room-join-box\">\n                <div>\n                    <input placeholder = \"Name\" onChange={e => setName(e.target.value)} />\n                </div>\n                <div>\n                    <input placeholder = \"room code\" onChange = {(e) => {setCode(e.target.value)}} />\n                    <button onClick ={JoinRoom}>Join Room</button>\n                </div>\n               <button onClick ={CreateRoom}>Create Room</button>\n            </div>\n       </div>\n    )\n\n}\n\nexport default RoomScreen\n","import React from 'react'\n\nconst CanvasControls = (props) => {\n    const {onPenChange, onColorChange} = props\n\n    return (\n        <div className = \"canvas-control\">\n            \n            <div>\n                <label htmlFor = \"pen-size\">Pen Size</label>\n                <input name = \"pen-size\" onChange = {e => onPenChange(e.target.value)} defaultValue = \"10\" type = \"range\" min = \"1\" max = \"100\" />\n            </div>\n            <div>\n                <label htmlFor = \"pen-color\">Pen Color</label>\n                <input name = \"pen-color\" onChange = {e => onColorChange(e.target.value)} type = \"color\" />\n            </div>\n\n            <button onClick = {() => props.onClear()}>Clear</button>\n        \n        </div>\n    )\n}\n\nexport default CanvasControls","import react from 'react'\nimport React, {useRef,useEffect, useContext} from 'react'\nimport socketContext from '../contexts/socketContext'\nimport CanvasControls from './CanvasControls'\n\n const Canvas = (props) => {\n    const {Socket, room, isAdmin} = useContext(socketContext);\n    \n    // Reference to MouseDown and canvas \n    const canvas = useRef()\n    let MouseDown = useRef(false)\n\n\n    // reference to pen color and size \n    let color = useRef(\"#000000\")\n    let penSize = useRef(10)\n\n    //canvas clearing function \n    const clear = () => {\n        Socket.emit(\"canvas-cleared\", room)\n        const context = canvas.current.getContext('2d');\n        context.clearRect(0, 0, canvas.current.width, canvas.current.height)\n    }\n\n    // canvas drawing function \n    const draw = (x, y, x2, y2) => {\n        const ctx = canvas.current.getContext(\"2d\")\n        ctx.beginPath();\n        ctx.strokeStyle = color.current;\n        ctx.lineWidth = penSize.current;\n        ctx.lineCap = \"round\";\n        ctx.moveTo(x,y);\n        ctx.lineTo(x2,y2);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    // clearing canvas \n    useEffect(() => {\n        if (!isAdmin && Socket) {\n            Socket.on(\"canvas-cleared\", () => clear())\n        }\n    })\n    \n    // Admin canvas editing controls \n    useEffect(() => {\n        if (canvas.current && isAdmin) {\n            let x = 0\n            let y = 0\n            canvas.current.addEventListener(\"mousedown\", (e) => {\n                x = e.offsetX \n                y = e.offsetY \n                MouseDown.current = true}\n            )\n\n            canvas.current.addEventListener(\"mouseup\", (e) => {\n                x = e.offsetX \n                y = e.offsetY \n                MouseDown.current = false\n            })\n            canvas.current.addEventListener(\"mousemove\", e => {\n                if (MouseDown.current) {\n                    draw(x,y,e.offsetX, e.offsetY)\n                    Socket.emit(\"canvas-edited\", x, y, e.offsetX, e.offsetY, room)\n                    x = e.offsetX \n                    y = e.offsetY \n                    Socket.emit(\"canvas-image-edited\", canvas.current.toDataURL(\"image/png\"), room)\n                }\n            })\n\n            canvas.current.addEventListener(\"touchstart\", (e) => {\n                e.preventDefault()\n\n                let bcr = e.target.getBoundingClientRect();\n                x = e.targetTouches[0].clientX - bcr.x;\n                y = e.targetTouches[0].clientY - bcr.y;\n                MouseDown.current = true}\n            )\n\n            canvas.current.addEventListener(\"touchend\", (e) => {\n                e.preventDefault()\n                MouseDown.current = false\n            })\n            canvas.current.addEventListener(\"touchmove\", e => {\n                e.preventDefault()\n\n                if (MouseDown.current) {\n                    let bcr = e.target.getBoundingClientRect();\n                    let x2 = e.targetTouches[0].clientX - bcr.x;\n                    let y2 = e.targetTouches[0].clientY - bcr.y;    \n\n                    draw(x,y,x2,y2)\n                    Socket.emit(\"canvas-edited\", x, y, e.offsetX, e.offsetY, room)\n                    x = x2 \n                    y = y2 \n                    Socket.emit(\"canvas-image-edited\", canvas.current.toDataURL(\"image/png\"), room)\n                }\n            })\n    \n        }\n    })\n\n\n    // Drawing image on update \n    useEffect(() => {\n        const drawIMG = (data) => {\n            const ctx = canvas.current.getContext(\"2d\")\n            var img = new Image();\n            img.src = data;\n            img.onload = function() {\n                ctx.drawImage(img, 0, 0, canvas.current.width, canvas.current.height);\n            }\n        }\n    \n        if (!Socket) return // returning if Socket has not yet connected \n        const handler = (data) => {\n            drawIMG(data)\n        }\n        Socket.on(\"canvas-image-update\", handler)\n        return () => Socket.off(\"canvas-image-update\", handler)\n\n    }, [Socket, props])\n\n\n    return (\n        <react.Fragment>\n            <canvas ref = {canvas} width = {props.width} height = {props.width * 9/16} />\n            {isAdmin && <CanvasControls onClear = {clear} onPenChange = {(value) => penSize.current = value} onColorChange = {value => color.current = value}  />}\n        </react.Fragment>)\n}\n\nexport default Canvas","import React from 'react'\n\nconst Chat = (props) => {\n    const {message, name, isOwn} = props.chat\n    return (\n        <div className = {isOwn ? \"own-chat-message\" : \"chat-message\"}>\n            <h5>{isOwn ? \"You\" : name}</h5>\n            <p>{message}</p>\n        </div>\n    )\n\n}\n\nexport default Chat","import React, { useContext , useEffect, useState} from 'react'\nimport SocketContext from \"../../contexts/socketContext\"\nimport Chat from './Chat'\nimport { IoIosArrowForward } from \"react-icons/io\"\nimport { BsChatRightText } from \"react-icons/bs\"\n\nconst ChatBox = (props) => {\n    const [chats, setChats] = useState([])\n    const {room, Socket, name} = useContext(SocketContext);\n    const [message, setMessage] = useState(\"\")\n    const [inView, toggleView] = useState(false)\n\n    const SendChat = () => {\n        if (!message) return\n        Socket.emit(\"new-chat\", message, name, room)\n        const chat = {name, message, isOwn: true}\n        setChats([...chats, chat])\n        setMessage(\"\")\n    }\n\n    useEffect(() => {\n        if (!Socket) return\n\n        const handler = ({name, message, isOwn}) => {\n            const chat = {name, message, isOwn}\n            setChats([...chats, chat])\n        }\n\n        Socket.on(\"chat-recieved\", handler)\n        \n        return () => Socket.off(\"chat-recieved\", handler)\n\n    }, [setChats, Socket, chats]) \n\n    let Styles = {}\n    \n    if (window.innerWidth > 768 && inView) Styles = {right: \"0%\"} \n    if (window.innerWidth > 768 && !inView) Styles = {right: \"-30%\"} \n    if (window.innerWidth < 768 && !inView) Styles = {top: \"100%\", right: \"0%\"} \n    if (window.innerWidth < 768 && inView) Styles = {top: \"10%\", right: \"0%\"}\n\n    return (\n       <React.Fragment>\n           <button className = \"chat-toggle-button\" onClick = {() => toggleView(true)}><BsChatRightText/></button>\n            <div className = \"chatbox\" style = {Styles}>\n            <button className = \"chatbox-toggle\" onClick = {() => toggleView(false)}><IoIosArrowForward/></button>\n            <div className = \"chatbox-chats\">\n                {chats.map(c => <Chat key = {c.name + c.message + Math.random()} chat = {c} />)}\n            </div>\n            <div className= \"chat-message-box\">\n                <input placeholder =\"Write a message\" value={message} onChange = {e => setMessage(e.target.value)}/>\n                <button onClick = {SendChat}>Send</button>\n            </div>\n        </div>\n       </React.Fragment>\n    )\n}\n\n\nexport default ChatBox\n","import React, { useContext, useState, useEffect } from 'react'\nimport socketContext from '../contexts/socketContext'\n\nconst FileBox = (props) => {\n    const {room, Socket, isAdmin} = useContext(socketContext);\n    const [files, setFiles] = useState([])\n\n    useEffect(() => {\n        if (Socket){\n            Socket.on(\"files-uploaded\", (file, name, type) => {\n                setFiles([...files, {link: URL.createObjectURL(new Blob([file], {type, name})), name}])\n            })\n        }\n    })\n\n    return (\n        <div className = \"file-box\">\n            {isAdmin && <input type = \"file\"  onChange = {async (e) => {\n                for (let file of e.target.files){\n                    const buffer = await file.arrayBuffer()\n                    Socket.emit(\"file-upload\", buffer, file.name, file.type, room)\n                    setFiles([...files, {link: URL.createObjectURL(new Blob([file], {type: file.type, name: file.name})), name: file.name}])\n                }\n            }}/>}\n            <div className = \"filebox-files\">\n                {files.map(f => <div key = {f.name} className = \"file-box-file\" >\n                        <span onClick = {() => window.open(f.link)}>{f.name}</span>\n                        {isAdmin && <button onClick = {() => {\n                            const index = files.indexOf(f);\n                            const oldFiles = [...files]\n                            oldFiles.splice(index, 1)\n                            setFiles(oldFiles)\n                        }}>adaw</button>}\n                        </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default FileBox\n","import React, { useContext , useState} from 'react'\nimport socketContext from '../contexts/socketContext'\nimport Canvas from './Canvas'\nimport ChatBox from './Chatbox/Chatbox'\nimport FileBox from './FileBox'\nconst Room = (props) => {\n    const {room} = useContext(socketContext)\n    if (!room) props.history.replace(\"/\")\n    const [WindowWidth, setWindowWidth] = useState(window.innerWidth)\n\n    window.addEventListener(\"resize\", () => {\n        setWindowWidth(window.innerWidth)}\n    )\n\n    return (\n    <div className = \"room-page-wrapper\">\n            <Canvas id = \"canvas-element\" width = {WindowWidth * 0.8} />\n            <FileBox />\n            <ChatBox />\n    </div>\n    )\n}\n\nexport default Room","import {useEffect, useState} from \"react\"\nimport {io} from \"socket.io-client\"\nimport socketContext from \"./contexts/socketContext\"\nimport {Switch, BrowserRouter, Route} from \"react-router-dom\"\nimport RoomScreen from \"./components/RoomScreen\"\nimport Room from \"./components/Room\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { toast } from \"react-toastify\"\n\ntoast.configure()\n\nfunction App() {\n  const [socket, setSocket] = useState()\n  const [room, setRoom] = useState()\n  const [isAdmin, setIsAdmin] = useState()\n  const [name, setName] = useState()\n\n  useEffect(() => {\n    const s = io(process.env.REACT_APP_ROOT_URL)\n    setSocket(s)\n    return () => s.disconnect()\n  }, [setSocket])\n\n  return (\n    <socketContext.Provider value = {{Socket: socket, room, setRoom, name, setName, isAdmin, setIsAdmin}}>\n      <BrowserRouter>\n        <Switch>\n          <Route path = \"/room/admin/:id\" render = {(props) => <Room {...props} admin={true} />}/>\n          <Route path = \"/room/:id\" render = {(props) => <Room {...props} />}/>\n          <Route path = \"/\" render = {(props) => <RoomScreen {...props} />} />\n        </Switch>\n      </BrowserRouter>\n    </socketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}