{"version":3,"sources":["contexts/socketContext.js","components/RoomScreen.jsx","components/CanvasControls.jsx","components/Canvas.jsx","components/Chatbox/Chatbox.jsx","components/FileBox.jsx","components/Room.jsx","App.js","index.js"],"names":["socketContext","createContext","RoomScreen","props","useState","code","setCode","useContext","Socket","name","setName","setRoom","setIsAdmin","useEffect","handler","isAdmin","history","push","on","off","className","onChange","e","target","value","placeholder","onClick","emit","CanvasControls","onPenChange","onColorChange","htmlFor","defaultValue","type","min","max","onClear","Canvas","room","canvas","useRef","MouseDown","color","penSize","clear","current","getContext","clearRect","width","height","draw","x","y","x2","y2","ctx","beginPath","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","closePath","addEventListener","offsetX","offsetY","toDataURL","preventDefault","bcr","getBoundingClientRect","targetTouches","clientX","clientY","data","img","Image","src","onload","drawImage","drawIMG","Fragment","ref","ChatBox","chats","setChats","SocketContext","message","setMessage","inView","toggleView","chat","isOwn","Styles","window","screen","right","top","style","map","c","FileBox","files","setFiles","file","link","URL","createObjectURL","Blob","a","arrayBuffer","buffer","f","open","index","indexOf","oldFiles","splice","Room","replace","admin","id","visualViewport","App","socket","setSocket","s","io","disconnect","Provider","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd51dff1.chunk.js","sourcesContent":["import { createContext } from \"react\";\nconst socketContext = createContext()\nexport default socketContext","import React, {useState,useEffect, useContext} from 'react'\nimport socketContext from '../contexts/socketContext'\n\nconst RoomScreen = (props) => {\n    const [code, setCode] = useState(\"\")\n    const {Socket, name, setName, setRoom, setIsAdmin} = useContext(socketContext)\n    useEffect(() => {\n        if (!Socket) return\n\n        const handler = (code, name, isAdmin) => {\n            setRoom(code)\n            setIsAdmin(isAdmin)\n            setName(name)\n            if (isAdmin)\n                props.history.push(\"/room/admin/\" + code)\n            else\n                props.history.push(\"/room/\" + code)\n        }\n\n        Socket.on(\"room-joined\", handler)\n\n        return () => Socket.off(\"room-joined\", handler)\n        \n    }, [Socket, setIsAdmin,setName, props, setRoom])\n\n\n    return (\n       <div className = \"room-join-screen-wrapper\">\n            <div className = \"room-join-box\">\n                <input onChange={e => setName(e.target.value)} />\n                <div>\n                    <input placeholder = \"room code\" onChange = {(e) => {setCode(e.target.value)}} />\n                    <button onClick ={() => Socket.emit(\"join-room\", code, name)}>Join Room</button>\n                </div>\n               <button onClick ={() => Socket.emit(\"create-room\", name)}>Create Room</button>\n            </div>\n       </div>\n    )\n\n}\n\nexport default RoomScreen\n","import React from 'react'\n\nconst CanvasControls = (props) => {\n    const {onPenChange, onColorChange} = props\n\n    return (\n        <div className = \"canvas-control\">\n            \n            <div>\n                <label htmlFor = \"pen-size\">Pen Size</label>\n                <input name = \"pen-size\" onChange = {e => onPenChange(e.target.value)} defaultValue = \"10\" type = \"range\" min = \"1\" max = \"100\" />\n            </div>\n            <div>\n                <label htmlFor = \"pen-color\">Pen Color</label>\n                <input name = \"pen-color\" onChange = {e => onColorChange(e.target.value)} type = \"color\" />\n            </div>\n\n            <button onClick = {() => props.onClear()}>Clear</button>\n        \n        </div>\n    )\n}\n\nexport default CanvasControls","import react from 'react'\nimport React, {useRef,useEffect, useContext} from 'react'\nimport socketContext from '../contexts/socketContext'\nimport CanvasControls from './CanvasControls'\n\n const Canvas = (props) => {\n    const {Socket, room, isAdmin} = useContext(socketContext);\n    \n    // Reference to MouseDown and canvas \n    const canvas = useRef()\n    let MouseDown = useRef(false)\n\n\n    // reference to pen color and size \n    let color = useRef(\"#000000\")\n    let penSize = useRef(10)\n\n    //canvas clearing function \n    const clear = () => {\n        Socket.emit(\"canvas-cleared\", room)\n        const context = canvas.current.getContext('2d');\n        context.clearRect(0, 0, canvas.current.width, canvas.current.height)\n    }\n\n    // canvas drawing function \n    const draw = (x, y, x2, y2) => {\n        const ctx = canvas.current.getContext(\"2d\")\n        ctx.beginPath();\n        ctx.strokeStyle = color.current;\n        ctx.lineWidth = penSize.current;\n        ctx.lineCap = \"round\";\n        ctx.moveTo(x,y);\n        ctx.lineTo(x2,y2);\n        ctx.stroke();\n        ctx.closePath();\n    }\n\n    // clearing canvas \n    useEffect(() => {\n        if (!isAdmin && Socket) {\n            Socket.on(\"canvas-cleared\", () => clear())\n        }\n    })\n    \n    // Admin canvas editing controls \n    useEffect(() => {\n        if (canvas.current && isAdmin) {\n            let x = 0\n            let y = 0\n            canvas.current.addEventListener(\"mousedown\", (e) => {\n                x = e.offsetX \n                y = e.offsetY \n                MouseDown.current = true}\n            )\n\n            canvas.current.addEventListener(\"mouseup\", (e) => {\n                x = e.offsetX \n                y = e.offsetY \n                MouseDown.current = false\n            })\n            canvas.current.addEventListener(\"mousemove\", e => {\n                if (MouseDown.current) {\n                    draw(x,y,e.offsetX, e.offsetY)\n                    Socket.emit(\"canvas-edited\", x, y, e.offsetX, e.offsetY, room)\n                    x = e.offsetX \n                    y = e.offsetY \n                    Socket.emit(\"canvas-image-edited\", canvas.current.toDataURL(\"image/png\"), room)\n                }\n            })\n\n            canvas.current.addEventListener(\"touchstart\", (e) => {\n                e.preventDefault()\n\n                let bcr = e.target.getBoundingClientRect();\n                x = e.targetTouches[0].clientX - bcr.x;\n                y = e.targetTouches[0].clientY - bcr.y;\n                MouseDown.current = true}\n            )\n\n            canvas.current.addEventListener(\"touchend\", (e) => {\n                e.preventDefault()\n                MouseDown.current = false\n            })\n            canvas.current.addEventListener(\"touchmove\", e => {\n                e.preventDefault()\n\n                if (MouseDown.current) {\n                    let bcr = e.target.getBoundingClientRect();\n                    let x2 = e.targetTouches[0].clientX - bcr.x;\n                    let y2 = e.targetTouches[0].clientY - bcr.y;    \n\n                    draw(x,y,x2,y2)\n                    Socket.emit(\"canvas-edited\", x, y, e.offsetX, e.offsetY, room)\n                    x = x2 \n                    y = y2 \n                    Socket.emit(\"canvas-image-edited\", canvas.current.toDataURL(\"image/png\"), room)\n                }\n            })\n    \n        }\n    })\n\n\n    // Drawing image on update \n    useEffect(() => {\n        const drawIMG = (data) => {\n            const ctx = canvas.current.getContext(\"2d\")\n            var img = new Image();\n            img.src = data;\n            img.onload = function() {\n                ctx.drawImage(img, 0, 0, canvas.current.width, canvas.current.height);\n            }\n        }\n    \n        if (!Socket) return // returning if Socket has not yet connected \n        const handler = (data) => {\n            drawIMG(data)\n        }\n        Socket.on(\"canvas-image-update\", handler)\n        return () => Socket.off(\"canvas-image-update\", handler)\n\n    }, [Socket, props])\n\n\n    return (\n        <react.Fragment>\n            <canvas ref = {canvas} width = {props.width} height = {props.width * 9/16} />\n            {isAdmin && <CanvasControls onClear = {clear} onPenChange = {(value) => penSize.current = value} onColorChange = {value => color.current = value}  />}\n        </react.Fragment>)\n}\n\nexport default Canvas","import React, { useContext , useEffect, useState} from 'react'\nimport SocketContext from \"../../contexts/socketContext\"\nconst ChatBox = (props) => {\n    const [chats, setChats] = useState([])\n    const {room, Socket, name} = useContext(SocketContext);\n    const [message, setMessage] = useState(\"\")\n    const [inView, toggleView] = useState(false)\n\n\n    useEffect(() => {\n        if (!Socket) return\n\n        const handler = ({name, message, isOwn}) => {\n            const chat = {name, message, isOwn}\n            setChats([...chats, chat])\n        }\n\n        Socket.on(\"chat-recieved\", handler)\n        \n        return () => Socket.off(\"chat-recieved\", handler)\n\n    }, [setChats, Socket, chats]) \n\n    let Styles = {}\n    if (window.screen.width > 768 && inView) Styles = {right: \"0%\"} \n    if (window.screen.width > 768 && !inView) Styles = {right: \"-30%\"} \n    if (window.screen.width < 768 && !inView) Styles = {top: \"100%\"} \n    if (window.screen.width < 768 && inView) Styles = {top: \"10%\"} \n    return (\n       <React.Fragment>\n           <button onClick = {() => toggleView(!inView)} > Toggle Chat</button>\n            <div className = \"chatbox\" style = {Styles}>\n            <button onClick = {() => toggleView(false)}>Down</button>\n            <div className = \"chatbox-chats\">\n                dawd\n                {chats.map(c => <div>{c.name + \" -- \" + c.message}</div>)}\n            </div>\n            <div className= \"chat-message-box\">\n                <input onChange = {e => setMessage(e.target.value)}/>\n                <button onClick = {() => Socket.emit(\"new-chat\", message, name, room)}>Send</button>\n            </div>\n        </div>\n       </React.Fragment>\n    )\n}\n\n\nexport default ChatBox\n","import React, { useContext, useState, useEffect } from 'react'\nimport socketContext from '../contexts/socketContext'\n\nconst FileBox = (props) => {\n    const {room, Socket, isAdmin} = useContext(socketContext);\n    const [files, setFiles] = useState([])\n\n    useEffect(() => {\n        if (Socket){\n            Socket.on(\"files-uploaded\", (file, name, type) => {\n                setFiles([...files, {link: URL.createObjectURL(new Blob([file], {type, name})), name}])\n            })\n        }\n    })\n\n    return (\n        <div className = \"file-box\">\n            {isAdmin && <input type = \"file\"  onChange = {async (e) => {\n                for (let file of e.target.files){\n                    const buffer = await file.arrayBuffer()\n                    Socket.emit(\"file-upload\", buffer, file.name, file.type, room)\n                    setFiles([...files, {link: URL.createObjectURL(new Blob([file], {type: file.type, name: file.name})), name: file.name}])\n                }\n            }}/>}\n            <div className = \"filebox-files\">\n                {files.map(f => <div key = {f.name} className = \"file-box-file\" >\n                        <span onClick = {() => window.open(f.link)}>{f.name}</span>\n                        {isAdmin && <button onClick = {() => {\n                            const index = files.indexOf(f);\n                            const oldFiles = [...files]\n                            oldFiles.splice(index, 1)\n                            setFiles(oldFiles)\n                        }}>adaw</button>}\n                        </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default FileBox\n","import React, { useContext } from 'react'\nimport socketContext from '../contexts/socketContext'\nimport Canvas from './Canvas'\nimport ChatBox from './Chatbox/Chatbox'\nimport FileBox from './FileBox'\nconst Room = (props) => {\n    const {room} = useContext(socketContext)\n    if (!room) props.history.replace(\"/\")\n    return (\n    <div className = \"room-page-wrapper\">\n            {props.admin && <div>you are an admin</div>}\n            <Canvas id = \"canvas-element\" width = {window.visualViewport.width * 0.8} />\n            <FileBox />\n            <ChatBox />\n    </div>\n    )\n}\n\nexport default Room","import {useEffect, useState} from \"react\"\nimport {io} from \"socket.io-client\"\nimport socketContext from \"./contexts/socketContext\"\nimport {Switch, BrowserRouter, Route} from \"react-router-dom\"\nimport RoomScreen from \"./components/RoomScreen\"\nimport Room from \"./components/Room\"\nfunction App() {\n  const [socket, setSocket] = useState()\n  const [room, setRoom] = useState()\n  const [isAdmin, setIsAdmin] = useState()\n  const [name, setName] = useState()\n\n  useEffect(() => {\n    const s = io(\"/\")\n    setSocket(s)\n    return () => s.disconnect()\n  }, [setSocket])\n\n  return (\n    <socketContext.Provider value = {{Socket: socket, room, setRoom, name, setName, isAdmin, setIsAdmin}}>\n      <BrowserRouter>\n        <Switch>\n          <Route path = \"/room/admin/:id\" render = {(props) => <Room {...props} admin={true} />}/>\n          <Route path = \"/room/:id\" render = {(props) => <Room {...props} />}/>\n          <Route path = \"/\" render = {(props) => <RoomScreen {...props} />} />\n        </Switch>\n      </BrowserRouter>\n    </socketContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}